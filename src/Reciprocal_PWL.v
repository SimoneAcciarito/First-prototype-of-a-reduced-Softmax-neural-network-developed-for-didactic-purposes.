// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\r24b_pseudosoftmax_in10_8bit\Reciprocal_PWL.v
// Created: 2025-09-29 11:51:53
// 
// Generated by MATLAB 24.2, HDL Coder 24.2, and Simulink 24.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Reciprocal_PWL
// Source Path: r24b_pseudosoftmax_in10_8bit/PseudoSM_ASIC/Reciprocal_PWL
// Hierarchy Level: 1
// Model version: 9.0
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Reciprocal_PWL
          (mant_out,
           mant_out1);


  input   [7:0] mant_out;  // ufix8_En8
  output  [7:0] mant_out1;  // ufix8_En7


  wire Constant4_out1;
  wire [8:0] Bit_Concat_out1;  // ufix9
  wire [8:0] Data_Type_Conversion_out1;  // ufix9_En8
  wire [8:0] Constant_out1;  // ufix9_En8
  wire [8:0] Shift_Arithmetic_out1;  // ufix9_En8
  wire signed [10:0] Sum_stage2_sub_cast;  // sfix11_En8
  wire signed [10:0] Sum_stage2_sub_cast_1;  // sfix11_En8
  wire signed [10:0] Sum_stage2_sub_temp;  // sfix11_En8
  wire signed [9:0] Sum_op_stage1;  // sfix10_En8
  wire [8:0] Constant1_out1;  // ufix9_En8
  wire [8:0] Shift_Arithmetic2_out1;  // ufix9_En8
  wire signed [10:0] Sum1_stage2_sub_cast;  // sfix11_En8
  wire signed [10:0] Sum1_stage2_sub_cast_1;  // sfix11_En8
  wire signed [10:0] Sum1_stage2_sub_temp;  // sfix11_En8
  wire signed [9:0] Sum1_op_stage1;  // sfix10_En8
  wire dtc1;  // ufix1_En1
  wire Extract_Bits_out1;  // ufix1
  wire [8:0] Shift_Arithmetic1_out1;  // ufix9_En8
  wire signed [10:0] Sum_stage3_sub_cast;  // sfix11_En8
  wire signed [10:0] Sum_stage3_sub_cast_1;  // sfix11_En8
  wire signed [10:0] Sum_stage3_sub_temp;  // sfix11_En8
  wire [7:0] Sum_out1;  // ufix8_En7
  wire [8:0] Shift_Arithmetic3_out1;  // ufix9_En8
  wire signed [10:0] Sum1_stage3_sub_cast;  // sfix11_En8
  wire signed [10:0] Sum1_stage3_sub_cast_1;  // sfix11_En8
  wire signed [10:0] Sum1_stage3_sub_temp;  // sfix11_En8
  wire [7:0] Sum1_out1;  // ufix8_En7
  wire [7:0] Multiport_Switch_out1;  // ufix8_En7


  assign Constant4_out1 = 1'b1;

  assign Bit_Concat_out1 = {Constant4_out1, mant_out};

  assign Data_Type_Conversion_out1 = Bit_Concat_out1;

  assign Constant_out1 = 9'b110011000;

  assign Shift_Arithmetic_out1 = Data_Type_Conversion_out1 >>> 8'd1;

  assign Sum_stage2_sub_cast = {2'b0, Constant_out1};
  assign Sum_stage2_sub_cast_1 = {2'b0, Shift_Arithmetic_out1};
  assign Sum_stage2_sub_temp = Sum_stage2_sub_cast - Sum_stage2_sub_cast_1;
  assign Sum_op_stage1 = Sum_stage2_sub_temp[9:0];

  assign Constant1_out1 = 9'b100100000;

  assign Shift_Arithmetic2_out1 = Data_Type_Conversion_out1 >>> 8'd2;

  assign Sum1_stage2_sub_cast = {2'b0, Constant1_out1};
  assign Sum1_stage2_sub_cast_1 = {2'b0, Shift_Arithmetic2_out1};
  assign Sum1_stage2_sub_temp = Sum1_stage2_sub_cast - Sum1_stage2_sub_cast_1;
  assign Sum1_op_stage1 = Sum1_stage2_sub_temp[9:0];

  assign dtc1 = Data_Type_Conversion_out1[7];

  assign Extract_Bits_out1 = dtc1;

  assign Shift_Arithmetic1_out1 = Data_Type_Conversion_out1 >>> 8'd3;

  assign Sum_stage3_sub_cast = {Sum_op_stage1[9], Sum_op_stage1};
  assign Sum_stage3_sub_cast_1 = {2'b0, Shift_Arithmetic1_out1};
  assign Sum_stage3_sub_temp = Sum_stage3_sub_cast - Sum_stage3_sub_cast_1;
  assign Sum_out1 = Sum_stage3_sub_temp[8:1];

  assign Shift_Arithmetic3_out1 = Data_Type_Conversion_out1 >>> 8'd4;

  assign Sum1_stage3_sub_cast = {Sum1_op_stage1[9], Sum1_op_stage1};
  assign Sum1_stage3_sub_cast_1 = {2'b0, Shift_Arithmetic3_out1};
  assign Sum1_stage3_sub_temp = Sum1_stage3_sub_cast - Sum1_stage3_sub_cast_1;
  assign Sum1_out1 = Sum1_stage3_sub_temp[8:1];

  assign Multiport_Switch_out1 = (Extract_Bits_out1 == 1'b0 ? Sum_out1 :
              Sum1_out1);

  assign mant_out1 = Multiport_Switch_out1;

endmodule  // Reciprocal_PWL

